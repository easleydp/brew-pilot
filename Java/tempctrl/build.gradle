plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

group = 'com.easleydp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}

configurations {
	// We'll use Undertow instead of Tamcat
    compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.junit.platform:junit-platform-launcher:1.5.2')
	testImplementation 'org.springframework.security:spring-security-test'

	// Use Undertow instead of Tomcat
    implementation 'org.springframework.boot:spring-boot-starter-undertow'

    implementation('org.apache.commons:commons-lang3:3.+')
    implementation('commons-io:commons-io:2.+')
    implementation('com.google.guava:guava:28.+')
    implementation('com.fazecast:jSerialComm:[2.2.0,3.0.0)')
}

test {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', 'local'
}

bootJar {
    manifest {
        attributes(
            'Built-By'       : System.properties['user.name'],
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Created-By'     : "Gradle ${gradle.gradleVersion}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}