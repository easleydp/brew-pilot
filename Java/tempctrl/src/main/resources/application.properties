# Specifies how often readings are taken. Recommended value is 60000 (1 minute).
# Longer values will work. Values less than 30000 (30 secs) definitely won't work, since 30 secs
# is the resolution of timestamps in readings records.
readings.periodMillis=60000
# Sometimes useful for testing to use a shorter period
#readings.periodMillis=30000

# Number of readings in a first generation readings file.
readings.gen1.readingsCount=30
# So, a first generation readings file lasts for this number x readings.periodMillis,
# e.g. 30 x 60000 ms = 30 minutes


# HTTP port for the Servlet container (not necessarily the Internet facing web server).
server.port=8081
server.servlet.context-path=/tempctrl

# Don't need these if using a separate web server such as nginx:
#server.compression.enabled=true
#server.port=8443
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=secret
#server.ssl.key-password=another-secret


# Logs are stored in a logs directory relative to the working directory of the application.
# You can customise this location by setting the server.undertow.accesslog.dir property.
server.undertow.accesslog.enabled=true
server.undertow.accesslog.pattern=%t %a "%r" %s (%D ms)

# Logging
logging.level.root=warn
logging.level.arduino=debug
logging.level.com.easleydp.tempctrl.spring=debug
logging.level.com.easleydp.tempctrl.domain=debug
logging.pattern.dateformat=MM/dd HH:mm:ss.SSS
logging.file.name=logs/app.log
logging.file.max-size=10MB
# Normally commented-out:
#logging.level.org.springframework.security=DEBUG

# Actuators
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.loggers.enabled=true
management.endpoint.logfile.enabled=true
management.endpoint.httptrace.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.threaddump.enabled=true


# Check every half an hour or so whether to send a 'cold crash coming soon' alert email.
coldCrashCheck.periodMinutes=30
coldCrashCheck.priorNoticeHours=24

# NOTE: Spring Scheduled tasks do NOT follow the same format as UNIX cron expressions; includes an initial
# seconds param. See https://spring.io/blog/2020/11/10/new-in-spring-5-3-improved-cron-expressions
# Test CRON expressions here (having removed that extra param):
#   https://crontab.guru/,  https://www.crondrive.com/test-cron-expression
#
# Send 'still alive' email (with status report) at 7pm every day:
stillAliveMessage.cronSchedule=0 0 19 * * *

# End