application.version=1.0

# Specifies how often readings are taken. Recommended value is 60000 (1 minute).
# Longer values will work. Values less than 30000 (30 secs) definitely won't work, since 30 secs
# is the resolution of timestamps in readings records.
readings.periodMillis=60000
# Sometimes useful for testing to use a shorter period
#readings.periodMillis=30000

# Number of readings in a first generation readings file.
readings.gen1.readingsCount=30
# So, a first generation readings file lasts for this number x readings.periodMillis,
# e.g. 30 x 60000 ms = 30 minutes


# HTTP port for the Servlet container (not necessarily the Internet facing web server).
server.port=8081
server.servlet.context-path=/tempctrl

# Don't need these if using a separate web server such as nginx:
#server.compression.enabled=true
#server.port=8443
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=secret
#server.ssl.key-password=another-secret


# Logs are stored in a logs directory relative to the working directory of the application.
# You can customise this location by setting the server.undertow.accesslog.dir property.
server.undertow.accesslog.enabled=true
server.undertow.accesslog.pattern=%t %a "%r" %s (%D ms)

# Controls whether a `message` property is included in default HTTP error responses. 
# The default setting (since Spring 2.3) is `never` because they reckon "This reduces the
# risk of leaking information to a client".
server.error.include-message=always

# Logging
logging.level.root=warn
logging.level.arduino=debug
logging.level.com.easleydp.tempctrl.spring=debug
logging.level.com.easleydp.tempctrl.domain=debug
logging.pattern.dateformat=MM/dd HH:mm:ss.SSS
logging.file.name=logs/app.log
logging.file.max-size=10MB
# Normally commented-out:
#logging.level.org.springframework.security=DEBUG

# Actuators
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.loggers.enabled=true
management.endpoint.logfile.enabled=true
management.endpoint.httptrace.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.threaddump.enabled=true


# Check every half an hour or so whether to send an email notification such as "cold crash coming soon"
# or "time to bottle".
coldCrashCheck.periodMinutes=30
coldCrashCheck.priorNoticeHours=36
coldCrashCheck.postCrashDwellHours=48


# ======== NOTE regarding the `*.cronSchedule` properties ========
# The Spring CRON expression format isn't quite the same as UNIX's. Spring's includes an initial
# seconds param. See https://spring.io/blog/2020/11/10/new-in-spring-5-3-improved-cron-expressions
# Tip: CRON expressions can be tested here (after removing that extra initial param):
#   https://crontab.guru/,  https://www.crondrive.com/test-cron-expression

# Check every 5 minutes or so whether it looks like a heater or fridge may have been inadvertently left
# switched off.
switchedOffCheck.periodMinutes=5
# Target vs actual chamber temp can be well off during the first few hours, so ignore this period.
switchedOffCheck.ignoreFirstHours=4
# Fridge being on for this number of minutes should have produced a downwards trend in tChamber.
switchedOffCheck.fridgeOnTimeMins=10
# Heater being on for this number of minutes should have produced an upwards trend in tChamber.
switchedOffCheck.heaterOnTimeMins=15

# Check every 15 mins or so whether we're online (by pinging the router). For the status page, we 
# collect the times of failed pings in a FIFO buffer sized by duration, e.g. 24 hours.
offlineCheck.routerAddress=192.168.1.1
offlineCheck.cronSchedule=0 */15 * * * *
offlineCheck.bufferSizeHrs=24

# Send 'still alive' email (with status report) at 7pm every day:
stillAliveMessage.cronSchedule=0 0 19 * * *


# The server application runs in UTC time zone. For the most part it doesn't have to get involved
# with presenting date/time in local time zone because this is left to the user's web browser. But
# there is the odd case (such as quoting a time in an email notification) where the server needs
# to know the user's local time zone. Set this property to the standard TZ ID for your locality,
# e.g. America/Los_Angeles. For a complete list see the "TZ database name" column of the following
# table: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List
timezone.localId=Europe/London


# End